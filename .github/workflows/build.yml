name: build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
  
      - name: 建立 node 环境
        uses: actions/setup-node@v3
        with:
           node-version: 14

      - name: 建立 quasar 环境
        run: |
          npm i -g yarn
          yarn global add @quasar/cli

      - name: 安装前端依赖
        run: yarn install

      - name: 打包前端
        run: |
          yarn quasar build
          zip -r dist/wahu_frontend.zip dist/wahu_frontend
      
      - uses: actions/upload-artifact@v3
        with:
          name: frontend_emits
          path: dist/wahu_frontend.zip
      
  bdist_wheel:
    runs-on: windows-latest
    needs: build_frontend
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/download-artifact@v3
        with:
          name: frontend_emits
      
      - name: 解压前端包
        run: |
          mkdir dist
          unzip wahu_frontend.zip -d dist/wahu_frontend
      
      - name: 升级 pip, setuptools, wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: 构建 wheel
        run: python setup.py bdist_wheel
      
      - uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: dist/*.whl
    
  pack-windows:
    runs-on: windows-latest
    needs: bdist_wheel

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/download-artifact@v3
        with:
          name: wheel
          
      - name: 下载 Python Embed
        run: |
          mkdir dist
          curl -o dist/python.zip https://www.python.org/ftp/python/3.10.4/python-3.10.4-embed-amd64.zip

      - name: 解压 Python Embed
        run: unzip dist/python.zip -d dist/package_base

      - name: 安装 pip, pipenv ，升级 setuptools, wheel
        run: |
          python -m pip install pip==22.0.4 pipenv
          python -m pip install --upgrade setuptools wheel
      
      - name: 安装依赖
        run: |
          pipenv install
          pipenv shell
          
      - name: 安装 wheel
        run: |
          from os import listdir, system
          whl = [f for f in listdir('.') if f.endswith('.whl')][0]
          system(f'python -m pip install {whl}[accelerate_fuzzywuzzy] --prefix dist/package_base -I')
        shell: python

      - name: 修改 python310._pth
        run: |
          with open('dist/package_base/python310._pth', 'a', encoding='utf-8') as wf:
            wf.write('\n./Lib/site-packages\n')
        shell: python

      - name: 复制入口文件、配置、README并压缩
        run: python dist_stuff/mk_win_pkg.py
        
      - uses: actions/upload-artifact@v3
        with:
          name: windows-package
          path: dist/PixivWahu-win64.zip

      - name: 创建 Release
        if: ${{ github.event_name == 'push' }}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            dist/PixivWahu-win64.zip
            dist/*.whl


